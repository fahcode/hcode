/** * Created by hfhleo on 2016/10/9. */(function(){    //创建场景    var s=new C3D.Stage({el:$('#scene')[0]});    s.size(window.innerWidth,window.innerHeight).material({color:"#000"}).update();    //创建容器    var sp=new C3D.Sprite();    sp.position(0, 0, -600).update();    s.addChild(sp);    //加载图片    var basePath='images/';    var loader=new window.PxLoader();    loader.addImage(basePath+"flexin.mp3");    loader.addProgressListener(function (e) {        var percent = Math.round((e.completedCount / e.totalCount) * 100);        $("#loading_text").html("已加载" + percent + " %");    });    loader.addCompletionListener(function () {        $("#loading_bg").remove();        animate_scene1.play();        $(".music").show();    });    //开始加载    loader.start();    //加载图片    var imgArr = [];    for (var k = 0; k < 20; k++) {        var img = new Image();        //img.src = "images/bg/1_"+((k+1<10)?("0"+(k+1)):k+1)+".png";        img.src = imglist["bg_"+((k+1<10)?("0"+(k+1)):(k+1))+"_png"];        img.crossOrigin = 'anonymous';        img.onload = function () {        }        imgArr.push(img);    }    //创建slogn    var slogn = C3D.create({        type: 'sprite', scale: [0.1], children: [            {                type: 'plane',                size: [446, 233],                material: [{image: imglist.slogn_png}]            }        ]    });    sp.addChild(slogn);    //创建粒子    var particle_sp = new C3D.Sprite();    particle_sp.position(0, 0, 0).scale(0.01).update();    var particle_children=function(){        var particleData = [            {w: 83, h: 40, url:imglist.pld_0_png},            {w: 38, h: 41, url:imglist.pld_1_png},            {w: 38, h: 30, url:imglist.pld_2_png},            {w: 37, h: 23, url:imglist.pld_3_png},            {w: 21, h: 20, url:imglist.pld_4_png},            {w: 15, h: 31, url:imglist.pld_5_png},            {w: 41, h: 80, url:imglist.pld_6_png},            {w: 27, h: 10, url:imglist.pld_7_png},            {w: 15, h: 23, url:imglist.pld_8_png},            {w: 24, h: 37, url:imglist.pld_9_png},            {w: 21, h: 33, url:imglist.pld_10_png},            {w: 24, h: 44, url:imglist.pld_11_png},            {w: 62, h: 38, url:imglist.pld_12_png},            {w: 17, h: 40, url:imglist.pld_13_png}];        for (var i = 0; i < 14; i++) {            var plane = new C3D.Plane();            plane.size(particleData[i].w, particleData[i].h).scale(0.9).material({                //color: C3D.getRandomColor(),                image: particleData[i].url,            }).update();            particle_sp.addChild(plane);        }        sp.addChild(particle_sp);    }    particle_children();    //创建云彩    var cloud_sp = new C3D.Sprite();    cloud_sp.position(0, 0, 0).scale(0.01).update();    var create_cloud=function(){        var cloud = [            {w: 83, h: 40, url:imglist.pld_0_png},            {w: 38, h: 41, url:imglist.pld_1_png},            {w: 38, h: 30, url:imglist.pld_2_png},            {w: 37, h: 23, url:imglist.pld_3_png},            {w: 21, h: 20, url:imglist.pld_4_png},            {w: 15, h: 31, url:imglist.pld_5_png},            {w: 41, h: 80, url:imglist.pld_6_png},            {w: 27, h: 10, url:imglist.pld_7_png},            {w: 15, h: 23, url:imglist.pld_8_png},            {w: 24, h: 37, url:imglist.pld_9_png},            {w: 21, h: 33, url:imglist.pld_10_png},            {w: 24, h: 44, url:imglist.pld_11_png},            {w: 62, h: 38, url:imglist.pld_12_png},            {w: 17, h: 40, url:imglist.pld_13_png}        ];        for (var i = 0; i < 14; i++) {            var cloud_plane = new C3D.Plane();            cloud_plane.size(cloud[i].w, cloud[i].h).scale(1).material({                image: cloud[i].url,            }).update();            cloud_sp.addChild(cloud_plane);        }        sp.addChild(cloud_sp);    }    create_cloud();    //创建背景    //将dom元素添加到三维对象里    var bg_sp=new C3D.Sprite();    bg_sp.position(0, 0, 0).update();    sp.addChild(bg_sp);    var r = Math.floor(129 * .5 / Math.tan(9 / 180 * Math.PI) - 5);    var n = 20;    var posxArr = [];    var posyArr = [];    var poszArr = [];    var bgArr = [];    for (var i = 0; i < n; i++) {        var posX = Math.floor(Math.sin((-360/n*i)/180*Math.PI) * r);        var posZ = Math.floor(Math.cos((-360/n*i)/180*Math.PI) * r);        var rosY = Math.floor((-360 / n * i)+180);        posxArr.push(posX);        poszArr.push(posZ);        posyArr.push(rosY);        //创建背景层        var p = new C3D.Plane({el:imgArr[i]});        p.size(129, 1170, 0);        p.position(0, 0, 0);        p.rotation(0, 0, 0);        p.scale(0, 0, 0);        p.material({bothsides:false});        //p.material({bothsides:!1,image:"images/bg/1_"+((i+1<10)?("0"+(i+1)):i+1)+".png"});        p.update();        bg_sp.addChild(p);        bgArr.push(p);    }    //漂浮物件    var pano_sp = new C3D.Sprite;    pano_sp.name("pano_sp").position(0, 0, 0).update();    sp.addChild(pano_sp);    //创建人物层    var ren_sp = new C3D.Sprite;    ren_sp.name("ren_sp").position(0, 0, 0).visibility({alpha: 0}).update();    pano_sp.addChild(ren_sp);    var ren_ItemsImg = [{            x: 0,            y: 318,            w: 129*2,            h: 607,            imgs: [imglist.ren1_01_png,imglist.ren1_02_png,imglist.ren1_03_png],            l: 50        },{            x: 129*4,            y: 288,            w: 129*3,            h: 649,            imgs: [imglist.ren2_01_png,imglist.ren2_02_png,imglist.ren2_03_png,imglist.ren2_04_png],            l: 50        },{            x: 129*10,            y: 491,            w: 129*3,            h: 677,            imgs: [imglist.ren3_01_png,imglist.ren3_02_png,imglist.ren3_03_png,imglist.ren3_04_png],            l: 20        },{            x: 129*16,            y: 260,            w: 129*3,            h: 585,            imgs: [imglist.ren4_01_png,imglist.ren4_02_png,imglist.ren4_03_png,imglist.ren4_04_png],            l: 20        },{            x: 129*12,            y: 176,            w: 129*1,            h: 153,            imgs: [imglist.shose3_01_png,imglist.shose3_02_png],            l: 20        }];    createPano(ren_sp,ren_ItemsImg);    //创建slong 按钮层    var sl_sp = new C3D.Sprite;    sl_sp.name("sl_sp").position(0, 0, 0).visibility({alpha: 0}).update();    pano_sp.addChild(sl_sp);    var sl_ItemsImg = [{        x: 129*9,        y: 210,        w: 129*2,        h: 352,        imgs: [imglist.slogn_01_png,imglist.slogn_02_png,imglist.slogn_03_png],        l: 50    }];    createPano(sl_sp,sl_ItemsImg);    //创建预约按钮    var yy_sp=new C3D.Sprite;    yy_sp.name("yy_sp").position(0, 0, 0).visibility({alpha: 0}).update();    sp.addChild(yy_sp);    var yy_ItemsImg=[{        x: 129*9,        y: 576,        w: 129*1,        h: 155,        imgs: [imglist.bigBtn_01_png,imglist.bigBtn_02_png],        l: 60    }];    createPano(yy_sp,yy_ItemsImg);    //最大的按钮动画    JT.fromTo(yy_sp,.5, {scaleX:.6,scaleY:.6}, {        scaleX:.7,scaleY:.7,repeat:-1,yoyo:true, onUpdate: function () {            this.target.updateT();        }    });    yy_sp.on("touchend", function() {        $('.pop_cj').show();        $('.dot,.cj_btn').removeClass('start');        cjClick();    });    //创建pano层公共方法    function createPano(parentSp,ItemsImg){        for(var k=0;k<ItemsImg.length;k++)        {            var e=Math.floor(ItemsImg[k].x/129);            var q=Math.floor((ItemsImg[k].x+ItemsImg[k].w)/129);            var p_sp = new C3D.Sprite();            //if(k==ItemsImg.length-1&&parentSp==sl_sp)            //{            //    //最大的按钮动画            //    JT.fromTo(p_sp,.5, {scaleX:.6,scaleY:.6}, {            //        scaleX:.7,scaleY:.7,repeat:-1,yoyo:true, onUpdate: function () {            //            this.target.updateT();            //        }            //    });            //    p_sp.on("touchend", function() {            //        $('.pop_cj').show();            //        $('.dot,.cj_btn').removeClass('start');            //    });            //}            p_sp.visibility({                alpha: 1,            }).updateV();            for(var w=e;w<=q;w++)            {                var plane=new C3D.Plane;                var y=-360/20*w;                var i=y/180*Math.PI;                var R=r+4;                plane.size(129, ItemsImg[k].h).position((Math.sin(i) * R).toFixed(2), ItemsImg[k].y + ItemsImg[k].h / 2 - 1170 / 2,(Math.cos(i) * R).toFixed(2)).rotation(0, y + 180, 0).material({                    image: ItemsImg[k].imgs[w - e],                    bothsides: !1,                    //color : C3D.getRandomColor(),                }).update(), p_sp.addChild(plane);            }            var f=-360/20*(q+e)/2+180;            var h=f/180*Math.PI;            var j=ItemsImg[k].l;            p_sp.position(Math.sin(h) * j, 0, Math.cos(h) * j).updateT();            parentSp.addChild(p_sp);        }    }    //创建按钮    var o = {            w: 2580,            h: 1170        };    var panoDots = new C3D.Sprite;    panoDots.name("panoDots").visibility({alpha: 0}).position(0, 0, 0).update();    sp.addChild(panoDots);    var create_dots=function(){        var dots1 = imglist.btn_icon_png;        var c_dots = [{                name: "1",                x: 340,                y: 480,                dot: dots1,                w: 241,                h: 57,                label: imglist.btn_1_png            }, {                name: "2",                x: 960,                y: 550,                dot: dots1,                w: 241,                h: 57,                label: imglist.btn_2_png            }, {                name: "3",                x: 1330,                y: 790,                dot: dots1,                w: 241,                h: 57,                label: imglist.btn_3_png            }, {                name: "4",                x: 2090,                y: 450,                dot: dots1,                w: 241,                h: 57,                label: imglist.btn_4_png            }];        panoDots.visibility({            alpha: 0,        }).updateV();        $.each(c_dots, function(A, B) {            var g = B,                Q = -360 * (g.x - 80) / o.w,                G = 90 * (g.y - o.h / 2) / o.h,                M = Q / 180 * Math.PI,                Y = r - 80,                i = C3D.create({                    type: "sprite",                    name: g.name,                    scale: [.6],                    children: [{                        type: "plane",                        name: "dot",                        size: [85, 85],                        position: [0, 2, 2],                        rotation: [G, 0, 0],                        material: [{                            image: g.dot,                            bothsides: false                        }],                        bothsides: false                    }, {                        type: "plane",                        name: "label",                        size: [0, g.h],                        rotation: [G, 0, 0],                        origin: [-25, 25],                        material: [{                            image: g.label,                            bothsides: false                        }],                    }]                });            i.position(Math.sin(M) * Y, .9 * (g.y - o.h / 2), Math.cos(M) * Y).rotation(0, Q + 180 - 5, 0).updateT(),                i.on("touchend", function() {                    switch (g.name)                    {                        case "1":                            $('.overlay,.pop_intro01').show();                            $('.commondots, .cdot').show().removeClass('start');                            break;                        case "2":                            $('.overlay,.pop_intro02').show();                            $('.commondots, .cdot').show().removeClass('start');                            break;                        case "3":                            $('.overlay,.pop_intro03').show();                            $('.commondots, .cdot').show().removeClass('start');                            break;                        case "4":                            $('.overlay,.pop_intro04').show();                            $('.commondots, .cdot').show().removeClass('start');                            break;                    }                }),                i.r0 = Q,                i.w0 = g.w,                JT.to(i.dot, .4, {                    scaleX: 1.1,                    scaleY: 1.1,                    yoyo: !0,                    repeat: -1,                    ease: JT.Quad.InOut,                    onUpdate: function() {                        this.target.updateT()                    }                }), panoDots.addChild(i)        });    };    create_dots();    //动画序列    var animate_scene1=JTL.create();    animate_scene1.add('delay',0);    animate_scene1.add(function(){        anim_slogn();        anim_particle(2);    },'delay+=0');    animate_scene1.add(function(){        animationOne();        anim_cloud();        anmin_pano();    },'delay+=3');    //粒子动画    function anim_particle(n) {        var _len = particle_sp.children.length;        for (var i = 0; i < _len; i++) {            var _l = i < 6 ? getRandom(50, 150) * n : getRandom(150, 250) * n;            var _r1 = getRandom(0, 360);            var _a1 = _r1 / 180 * Math.PI;            var _r2 = n == 1 ? getRandom(-10, 10) : getRandom(-80, 80);            var _a2 = _r2 / 180 * Math.PI;            var _n1 = Math.sin(_a2) * _l;            var _n2 = Math.abs(Math.cos(_a2) * _l);            particle_sp.children[i].position(Math.cos(_a1) * _n2, _n1, Math.sin(_a1) * _n2).updateT();        }        JT.to(particle_sp, 1, {            scaleX: 1,            scaleY: 1,            scaleZ: 1,            ease: JT.Quad.Out,            onUpdate: function () {                this.target.updateT();            }, onEnd: function () {                JT.to(this.target, 1, {                    scaleX: 0,                    scaleY: 0,                    scaleZ: 0,                    ease: JT.Quad.In,                    onUpdate: function () {                        this.target.updateT();                    }                });            }        });        JT.fromTo(particle_sp, 2, {rotationY: 0}, {            rotationY: 360,onUpdate: function () {                this.target.updateT();            }        });        JT.fromTo(particle_sp.children, 2, {rotationY: 0}, {            rotationY: -360, onUpdate: function () {                this.target.updateT();            },onEnd:function(){                this.target.remove();                JT.kill(particle_sp);            }        });    }    //slogn动画    function anim_slogn() {        JT.to(slogn,.3, {            scaleX: 0.8,            scaleY: 0.8,            ease: JT.Quad.Out,            onUpdate: function () {                this.target.updateT();            }, onEnd: function () {                JT.to(this.target, 2, {                    scaleX: 0,                    scaleY: 0,                    ease: JT.Quad.In,                    onUpdate: function () {                        this.target.updateT();                    },onEnd:function(){                        particle_sp.remove();                        this.target.remove();                        JT.kill(slogn);                    }                });            }        });    }    //云动画    function anim_cloud() {        var _len = cloud_sp.children.length;        for (var i = 0; i < _len; i++) {            var _l = getRandom(200, 800);            var _r1 = getRandom(0, 360);            var _a1 = _r1 / 180 * Math.PI;            var _r2 = getRandom(-25, 25);            var _a2 = _r2 / 180 * Math.PI;            var _n1 = Math.sin(_a2) * _l;            var _n2 = Math.abs(Math.cos(_a2) * _l);            cloud_sp.children[i].position(Math.cos(_a1) * _n2, _n1, Math.sin(_a1) * _n2).scale(1.5).updateT();        }        JT.to(cloud_sp, 0.8, {            scaleX: 1,            scaleY: 1,            scaleZ: 1,            ease: JT.Quad.Out,            onUpdate: function () {            }, onEnd: function () {                JT.to(this.target, 1, {                    scaleX: 1.5,                    scaleY: 1.5,                    scaleZ: 1.5,                    ease: JT.Quad.In,                    onUpdate: function () {                    }                });            }        });        JT.fromTo(cloud_sp, 2, {rotationY: 0}, {            rotationY: 720, onUpdate: function () {                this.target.updateT();            }, onEnd: function () {                this.target.remove();                JT.kill(cloud_sp);            }        });        JT.fromTo(cloud_sp.children, 2, {rotationY: 0}, {            rotationY: -720, onUpdate: function () {                this.target.updateT();            }        });    }    //场景动画    function animationOne() {        JT.fromTo(sp, 4, {            z: -2200        }, {            z: -150,            ease: JT.Quad.Out,            onUpdate: function() {                this.target.updateT().updateV()            },onEnd:function(){            }        });        JT.fromTo(bg_sp, 4, {rotationY:-720}, {            rotationY: 0, repeat: 0, yoyo: true, ase: JT.Quad.Out, onUpdate: function () {                this.target.updateT();            }, onEnd: function () {                p=false;                requestAnimationFrame(go);            }        });        for (var i = 0; i < bgArr.length; i++) {            JT.to(bgArr[i],.6, {                scaleX: 1,                scaleY: 1,                scaleZ: 1,                x: posxArr[i],                z: poszArr[i],                rotationY: posyArr[i],                ease: JT.Quad.Out,                onUpdate: function () {                    this.target.updateT()                },                onEnd: function () {                }            })        }    }    function anmin_pano()    {        //漂浮动画        for (var g = 0, C = pano_sp.children.length; C > g; g++){            JT.from(pano_sp.children[g], 2, {                x: 0,                z: 0,                scaleX: 0,                scaleY: 0,                scaleZ: 0,                delay: Math.random() + 2,                ease: JT.Quad.Out,                onUpdate: function() {                    this.target.updateT()                },                onStart: function() {                    this.target.visibility({                        alpha: 1                    }).updateV()                },onEnd:function(){                }            });        }        JT.fromTo(pano_sp, 4, {            rotationY: -720        }, {            rotationY: 0,            ease: JT.Quad.Out,            onUpdate: function() {                this.target.updateT().updateV()            },onEnd:function(){            }        });        JT.fromTo(yy_sp,1, {        }, {            delay: 2,            ease: JT.Quad.Out,            onUpdate: function() {                this.target.updateT().updateV()            },            onStart: function() {                this.target.visibility({                    alpha: 1                }).updateV();            }        });        //按钮动画        JT.fromTo(panoDots,.5, {            //rotationY: -360,            alpha: 0        }, {            //rotationY: 0,            alpha: 1,            delay: 4,            ease: JT.Quad.Out,            onUpdate: function() {                this.target.updateT().updateV()            },            onStart: function() {                this.target.visibility({                    alpha: 1                }).updateV();            },onEnd:function(){            }        })    }    //ִmove动画    function go() {        var t = (d.lon + f.lon + c.lon) % 360,            i = .35 * (d.lat + f.lat + c.lat);        t - bg_sp.rotationY > 180 && (bg_sp.rotationY += 360),        t - bg_sp.rotationY < -180 && (bg_sp.rotationY -= 360);        var n = t - bg_sp.rotationY,            a = i - bg_sp.rotationX;        Math.abs(n) < .1 ? bg_sp.rotationY = t : bg_sp.rotationY += .3 * n,            Math.abs(a) < .1 ? bg_sp.rotationX = i : bg_sp.rotationX += .15 * a,            bg_sp.updateT();        panoDots.rotationY = bg_sp.rotationY;        panoDots.rotationX = bg_sp.rotationX;        panoDots.updateT();        t - pano_sp.rotationY > 180 && (pano_sp.rotationY += 360),        t - pano_sp.rotationY < -180 && (pano_sp.rotationY -= 360);        var o = t - pano_sp.rotationY,            r = i - pano_sp.rotationX;        Math.abs(o) < .1 ? pano_sp.rotationY = t : pano_sp.rotationY += .15 * o, Math.abs(r) < .1 ? pano_sp.rotationX = i : pano_sp.rotationX += .15 * r, pano_sp.updateT();        var s12 = -150 - 20 * Math.abs(n);        sp.z += .1 * (s12 - sp.z), sp.updateT();        panoDots_show(panoDots.rotationY);        requestAnimationFrame(go);    }    //显示按钮    function  panoDots_show(t) {        var i = (-180 - t) % 360;        i = i > 0 ? i - 360 : i;        for (var e = 0, a = panoDots.children.length; a > e; e++) {            var o = panoDots.children[e];            o.r0 > i - 5 && o.r0 < i + 25 ? 0 == o.label.width && (JT.kill(o.label), JT.to(o.label, .3, {                width: o.w0,                ease: JT.Quad.Out,                onUpdate: function() {                    this.target.updateS()                }            })) : o.label.width == o.w0 && (JT.kill(o.label), JT.to(o.label, .3, {                width: 0,                ease: JT.Quad.Out,                onUpdate: function() {                    this.target.updateS()                }            }))        }    }    //resize    var resize =function() {        setTimeout(function() {            s.size(window.innerWidth, window.innerHeight).update();        }, 10)    }    $(window).on("resize",function(){resize()})    window.ontouchmove = function(e) {e.preventDefault(); };    //*********鼠标事件*******//    var d = {            lat: 0,            lon: 0        },        f = {            lon: 0,            lat: 0        };    var c = {            lon: 0,            lat: 0        },        p =true;    var o2 = new Orienter();    o2.handler = function (t) {        d.lon = -t.lon,            d.lat = t.lat        if(p){            f.lat = -d.lat,                f.lon = -d.lon        }    };    o2.init();    //touch    var originTouchPos = {            x: 0,            y: 0        },        oldTouchPos = {            x: 0,            y: 0        },        newTouchPos = {            x: 0,            y: 0        },        firstDir= "",        originTime= 0,        oldTime= 0,        newTime= 0,        dx= 0,        dy= 0,        ax= 0,        ay= 0,        time= 0;    var onTouchStart = function(t) {        firstDir = "", t = t.changedTouches[0];        originTouchPos.x = oldTouchPos.x = newTouchPos.x = t.clientX ;        originTouchPos.y = oldTouchPos.y = newTouchPos.y = t.clientY ;        originTime = oldTime = newTime = Date.now();        dx = dy = ax = ay = 0,            sp.on("touchmove", onTouchMove),            sp.on("touchend", onTouchEnd)    };    sp.on("touchstart", onTouchStart);    var onTouchMove = function(t) {        return t = t.changedTouches[0],            newTouchPos.x = t.clientX,            newTouchPos.y = t.clientY,            newTime = Date.now(),            checkGesture(),            oldTouchPos.x = newTouchPos.x,            oldTouchPos.y = newTouchPos.y,            oldTime = newTime, !1    };    var onTouchEnd = function() {        newTime = Date.now();        var t = (newTime - oldTime) / 1e3;        sp.off("touchmove", onTouchMove),            sp.off("touchend", onTouchEnd)    }    function checkGesture(){        dx = fixed2(newTouchPos.x - originTouchPos.x),            dy = fixed2(newTouchPos.y - originTouchPos.y),            ax = fixed2(newTouchPos.x - oldTouchPos.x),            ay = fixed2(newTouchPos.y - oldTouchPos.y),            time = (newTime - oldTime) / 1e3,        "" == firstDir && (Math.abs(ax) > Math.abs(ay) ? firstDir = "x" : Math.abs(ax) < Math.abs(ay) && (firstDir = "y"));        if(!p){            c.lon = (c.lon - .3 * ax) % 360,                c.lat = Math.max(-60, Math.min(60, c.lat + .3 * ay))        }    }    function fixed2(t) {        return Math.floor(100 * t) / 100    }    requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame ||        function (callback) {            setTimeout(callback, 1000 / 60);        };    var getRandom = function(t, i) {        return t + Math.floor(Math.random() * (i - t) * 100) / 100    }    var ispay = true;    var audioEl = document.getElementById('bgm');    audioEl.addEventListener('play', function() {        $('.music').removeClass("pause");    }, false);    forceSafariPlayAudio();    function forceSafariPlayAudio() {        audioEl.load();        audioEl.play();    }    $('.music').click(function(){        if($('.music').attr("class")=="music"){            $("#bgm")[0].pause();            $('.music').addClass("pause");            ispay = false;        }else{            $("#bgm")[0].play();            $('.music').removeClass("pause");            ispay = true;        }    });})()